{"version":3,"sources":["App.tsx","components/HomePage/HomePage.tsx","components/NotFoundRedirect/NotFoundRedirect.tsx","components/NotFound/NotFound.tsx","components/Navigate/Navigate.tsx","components/Loader/Loader.tsx","api.ts","helpers.ts","components/PeopleTableRow/PeopleTableRow.tsx","components/PeopleTable/PeopleTable.tsx","components/PeoplePage/PeoplePage.tsx","index.tsx"],"names":["App","className","role","to","isActive","classNames","HomePage","NotFoundRedirect","navigate","useNavigate","useEffect","NotFound","Navigate","Loader","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","peopleWithParentsInfo","people","map","person","father","find","p","fatherName","name","mother","motherName","PeopleTableRow","slug","useParams","sex","born","died","PeopleTable","PeoplePage","useState","setPeople","isLoading","setIsLoading","errorMessage","setErrorMessage","fetchData","peopleFromServer","noPeopleMessage","length","peopleTable","router","createHashRouter","path","element","errorElement","children","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e7151ca2.chunk.js","sourcesContent":["import React from 'react';\nimport classNames from 'classnames';\nimport { NavLink, Outlet } from 'react-router-dom';\n\nimport './App.scss';\n\nexport const App: React.FC = () => {\n  return (\n    <div data-cy=\"app\">\n      <nav\n        data-cy=\"nav\"\n        className=\"navbar is-fixed-top has-shadow\"\n        role=\"navigation\"\n        aria-label=\"main navigation\"\n      >\n        <div className=\"container\">\n          <div className=\"navbar-brand\">\n            <NavLink\n              to=\"/\"\n              className={({ isActive }) => classNames(\n                'navbar-item',\n                { 'has-background-grey-lighter': isActive },\n              )}\n            >\n              Home\n            </NavLink>\n            <NavLink\n              to=\"/people\"\n              className={({ isActive }) => classNames(\n                'navbar-item',\n                { 'has-background-grey-lighter': isActive },\n              )}\n            >\n              People\n            </NavLink>\n          </div>\n        </div>\n      </nav>\n      <main className=\"section\">\n        <div className=\"container\">\n          <Outlet />\n        </div>\n      </main>\n    </div>\n  );\n};\n","import React from 'react';\n\nexport const HomePage: React.FC = () => {\n  return (\n    <h1 className=\"title\">Home Page</h1>\n  );\n};\n","import React, { useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\n\nexport const NotFoundRedirect: React.FC = () => {\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    navigate('/not-found');\n  }, []);\n\n  return null;\n};\n","import React from 'react';\n\nexport const NotFound: React.FC = () => {\n  return (\n    <h1 className=\"title\">Page not found</h1>\n  );\n};\n","import React, { useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\n\nexport const Navigate: React.FC = () => {\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    navigate('/');\n  }, []);\n\n  return null;\n};\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import { Person } from './types';\n\nexport const peopleWithParentsInfo = (people: Person[]) => people\n  .map((person) => {\n    const father = people.find(p => person.fatherName === p.name);\n    const mother = people.find(p => person.motherName === p.name);\n\n    return {\n      ...person,\n      mother,\n      father,\n    };\n  });\n","import React from 'react';\nimport { Link, useParams } from 'react-router-dom';\nimport classNames from 'classnames';\nimport { Person } from '../../types';\n\ninterface Props {\n  person: Person\n}\n\nexport const PeopleTableRow: React.FC<Props> = ({ person }) => {\n  const { slug } = useParams();\n\n  return (\n    <tr\n      data-cy=\"person\"\n      className={classNames({\n        'has-background-warning': person.slug === slug,\n      })}\n    >\n      <td>\n        <Link\n          to={person.slug}\n          className={classNames(\n            { 'has-text-danger': person.sex === 'f' },\n          )}\n        >\n          {person.name}\n        </Link>\n      </td>\n      <td>{person.sex}</td>\n      <td>{person.born}</td>\n      <td>{person.died}</td>\n      <td>\n        {person.mother\n          ? (\n            <Link\n              className=\"has-text-danger\"\n              to={person.mother.slug}\n            >\n              {person.motherName || '-'}\n            </Link>\n          ) : (\n            person.motherName || '-'\n          )}\n      </td>\n      <td>\n        {person.father\n          ? (\n            <Link\n              to={person.father.slug}\n            >\n              {person.fatherName || '-'}\n            </Link>\n          ) : (\n            person.fatherName || '-'\n          )}\n      </td>\n    </tr>\n  );\n};\n","import React from 'react';\nimport { Person } from '../../types';\nimport { PeopleTableRow } from '../PeopleTableRow';\n\ninterface Props {\n  people: Person[]\n}\nexport const PeopleTable: React.FC<Props> = ({ people }) => {\n  return (\n    <table\n      data-cy=\"peopleTable\"\n      className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n    >\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>Sex</th>\n          <th>Born</th>\n          <th>Died</th>\n          <th>Mother</th>\n          <th>Father</th>\n        </tr>\n      </thead>\n      <tbody>\n        {people.map(person => (\n          <PeopleTableRow key={person.slug} person={person} />\n        ))}\n      </tbody>\n    </table>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport { Person } from '../../types';\nimport { Loader } from '../Loader';\nimport { getPeople } from '../../api';\nimport { peopleWithParentsInfo } from '../../helpers';\nimport { PeopleTable } from '../PeopleTable';\n\nexport const PeoplePage: React.FC = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [isLoading, setIsLoading] = useState<boolean>(false);\n  const [errorMessage, setErrorMessage] = useState<string>('');\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        setIsLoading(true);\n        const response = await getPeople();\n\n        const peopleFromServer = peopleWithParentsInfo(response);\n\n        setPeople(peopleFromServer as Person[]);\n        setIsLoading(false);\n      } catch (error) {\n        setIsLoading(false);\n        setErrorMessage('Something went wrong');\n      }\n    };\n\n    fetchData();\n  }, []);\n\n  const noPeopleMessage = !isLoading && !errorMessage && people.length === 0;\n  const peopleTable = !isLoading && !errorMessage && people.length > 0;\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n\n      <div className=\"block\">\n        <div className=\"box table-container\">\n          {isLoading && <Loader />}\n\n          {errorMessage && (\n            <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n              {errorMessage}\n            </p>\n          )}\n\n          {noPeopleMessage && (\n            <p data-cy=\"noPeopleMessage\">\n              There are no people on the server\n            </p>\n          )}\n\n          {peopleTable && (\n            <PeopleTable people={people} />\n          )}\n        </div>\n      </div>\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { createHashRouter, RouterProvider } from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\nimport { HomePage } from './components/HomePage';\nimport { NotFoundRedirect } from './components/NotFoundRedirect';\nimport { NotFound } from './components/NotFound';\nimport { Navigate } from './components/Navigate';\nimport { PeoplePage } from './components/PeoplePage';\n\nconst router = createHashRouter([\n  {\n    path: '/home',\n    element: <Navigate />,\n  },\n  {\n    path: '/',\n    element: <App />,\n    errorElement: <NotFoundRedirect />,\n    children: [\n      {\n        path: 'some/not/existing/page',\n        element: <NotFound />,\n      },\n      {\n        path: '/',\n        element: <HomePage />,\n      },\n      {\n        path: '/people',\n        element: <PeoplePage />,\n        children: [\n          {\n            path: ':slug',\n            element: <PeoplePage />,\n          },\n        ],\n      },\n    ],\n  },\n]);\n\nReactDOM.render(\n  <RouterProvider router={router} />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}